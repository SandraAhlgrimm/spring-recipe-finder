name: Recipe JSON Formatter
description: Fixes and validates JSON format for recipe responses to ensure proper structure
model: openai/gpt-4o
modelParameters:
  temperature: 0.1
  max_tokens: 1000
messages:
  - role: system
    content: >
      You are a helpful assistant that fixes and validates JSON format for recipe responses.
      Your job is to ensure the recipe JSON follows the exact required structure and formatting rules.
      
      As you can see in the provided JSON schema, the ingredients are just a list of strings with quantities.
      The imageUrl value should always be an empty string "".
      Ensure the JSON output is always valid without e.g. missing any parentheses, commas, or quotes.
  - role: user
    content: |
      Please fix this recipe JSON to match the required format:
      
      {{invalidJson}}
      
      Required JSON structure:
      {
        "name": "Recipe Name",
        "description": "Brief description of the dish",
        "ingredients": ["500g ingredient1", "2 tbsp ingredient2", "1 cup ingredient3"],
        "instructions": ["Step 1 instruction", "Step 2 instruction", "Step 3 instruction"],
        "imageUrl": ""
      }
      
      Important formatting rules:
      - All strings must be properly quoted
      - Arrays must use square brackets []
      - Objects must use curly braces {}
      - No trailing commas
      - imageUrl must always be an empty string ""
      - Quantities should be included in the ingredient strings
      - Instructions should be clear step-by-step actions
      
      Return only the corrected JSON, no additional text.
testData:
  - invalidJson: |
      {
        "name": "Tomato Pasta"
        "description": "Simple pasta dish",
        "ingredients": ["pasta", "tomatoes", "garlic"],
        "instructions": ["Cook pasta", "Add tomatoes"],
        "imageUrl": null,
      }
    expected: |
      {
        "name": "Tomato Pasta",
        "description": "Simple pasta dish",
        "ingredients": ["400g pasta", "500g tomatoes", "3 cloves garlic"],
        "instructions": ["Cook pasta according to package directions", "Add diced tomatoes and cook for 10 minutes"],
        "imageUrl": ""
      }
  - invalidJson: |
      {
        name: "Chicken Soup",
        description: "Hearty soup",
        ingredients: [chicken, vegetables, broth],
        instructions: [Cook chicken, Add vegetables],
        imageUrl: ""
      }
    expected: |
      {
        "name": "Chicken Soup",
        "description": "Hearty soup",
        "ingredients": ["1kg chicken", "300g mixed vegetables", "1L chicken broth"],
        "instructions": ["Cook chicken until tender", "Add vegetables and simmer for 20 minutes"],
        "imageUrl": ""
      }
evaluators:
  - name: Valid JSON Format
    llm:
      modelId: openai/gpt-4o-mini
      prompt: |
        Check if the output is valid JSON format. Parse the JSON and verify it contains all required fields:
        - name (string)
        - description (string) 
        - ingredients (array of strings)
        - instructions (array of strings)
        - imageUrl (empty string)
        
        Your output should only be YES or NO on its own line.
        
        <output>
        {{completion}}
        </output>
      choices:
        - choice: 'YES'
          score: 1
        - choice: 'NO'
          score: 0
  - name: Recipe Completeness
    uses: github/coherence
